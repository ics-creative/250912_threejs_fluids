import{u as E,T as q,a as z,V as T,v as P,s as Z,r as $,d as G,t as ee,w as te,N as ae,e as ne,g as re,P as ie,W as oe,S as se,O as le,M as ue,h as ce,R as L,F as de,i as me,j as N,C as B,k as fe,m as we,n as pe,o as ge,p as he,x as ve,L as xe,y as Se,z as Te,q as Re}from"./PointerManager-D3T1aSYE.js";/* empty css              */const ye=()=>{const t=E(new q),a=E(new q),m=z(new T),f=z(new T),r=z(new T(1,1)),e=P(Z.xy).mul(f),n=P(e.x,e.y.oneMinus()),p=t.sample(n).toVar(),v=n.sub(.5).mul(r).add(.5),O=v.x.greaterThanEqual(0).and(v.x.lessThanEqual(1)),j=v.y.greaterThanEqual(0).and(v.y.lessThanEqual(1)),k=O.and(j),J=P(1.2).mul(p.xy).mul(m),X=$(v.sub(J),f),Y=a.sample(X).rgb,_=G(Y.add(ee(p.z.mul(.01))),1),K=G(0,0,0,1),Q=te(k,_,K),M=new ae;return M.vertexNode=ne(),M.fragmentNode=Q,re(M,{uTexture:t,uImage:a,uTexelSize:m,uTextureSize:f,uImageScale:r})},c={pixelRatio:.5,solverIteration:5,forceRadius:20,forceCoefficient:1e3,dissipation:.996};let H=0;const d=new ie;let i,y,C,R,h=Math.round(window.innerWidth*window.devicePixelRatio*c.pixelRatio),w=Math.round(window.innerHeight*window.devicePixelRatio*c.pixelRatio),u=new T,o,l,S,b,I,W,D,V,s;await Me();U(performance.now());async function Me(){i=new oe({antialias:!1,forceWebGL:!1}),await i.init(),i.setPixelRatio(window.devicePixelRatio),i.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(i.domElement),y=new se,C=new le(-1,1,1,-1,0,1),R=new ue(new ce(2,2)),y.add(R);const t={wrapS:B,wrapT:B,minFilter:N,magFilter:N,format:me,type:de,depthBuffer:!1,stencilBuffer:!1};o=new L(h,w,t),l=new L(h,w,t),A(o),A(l),b=fe(),I=we(),W=pe(),D=ge(),V=he(),s=ye(),await Pe(s),S=new ve().load("texture_demo2.jpg",()=>{F()}),S.minFilter=xe,S.magFilter=Se,S.colorSpace=Te,window.addEventListener("resize",F),d.init(i.domElement),d.addEventListener("firstInteraction",()=>{document.querySelector("#overlay-hint").style.display="none"}),F()}function F(){i.setPixelRatio(window.devicePixelRatio),i.setSize(window.innerWidth,window.innerHeight);const t=window.innerWidth*window.devicePixelRatio,a=window.innerHeight*window.devicePixelRatio;h=Math.round(t*c.pixelRatio),w=Math.round(a*c.pixelRatio),o.setSize(h,w),l.setSize(h,w),d.resizeTarget(c.pixelRatio,i.backend.coordinateSystem===Re?w:0),u.set(1/h,1/w),b.uniforms.uTexelSize.value.copy(u),I.uniforms.uTexelSize.value.copy(u),W.uniforms.uTexelSize.value.copy(u),D.uniforms.uTexelSize.value.copy(u),V.uniforms.uTexelSize.value.copy(u),s.uniforms.uTexelSize.value.copy(u),s.uniforms.uTextureSize.value.set(1/t,1/a),s.uniforms.uImage.value.source?.data&&s.uniforms.uImageScale.value.copy(ze(t,a,s.uniforms.uImage.value.width,s.uniforms.uImage.value.height))}function ze(t,a,m,f){const r=t/a,e=m/f,n=r>=e?r/e:1,p=r>=e?1:e/r;return new T(n,p)}function U(t){const a=(t-H)/1e3;if(d.isPointerDown){const r=b,e=r.uniforms,n=d.pointer.clone().sub(d.prevPointer).multiply(u).multiplyScalar(c.forceCoefficient);e.uData.value=o.texture,e.uForceCenter.value.copy(d.pointer.clone().multiply(u)),e.uForceDeltaV.value.copy(n),e.uForceRadius.value=c.forceRadius,g(r,l),x()}const m=Math.min(Math.max(Math.floor(a*240),1),8),f=a/m;for(let r=0;r<m;r++){{const e=I,n=e.uniforms;n.uData.value=o.texture,n.uDeltaT.value=f,n.uDissipation.value=c.dissipation,g(e,l),x()}{const e=W,n=e.uniforms;n.uData.value=o.texture,g(e,l),x()}for(let e=0;e<c.solverIteration;e++){const n=D,p=n.uniforms;p.uData.value=o.texture,g(n,l),x()}{const e=V,n=e.uniforms;n.uData.value=o.texture,g(e,l),x()}}{const r=s,e=r.uniforms;e.uTexture.value=o.texture,s.uniforms.uImage.value=S,g(r,null)}d.updatePreviousPointer(),H=t,requestAnimationFrame(U)}function A(t){i.setRenderTarget(t),i.clearColor(),i.setRenderTarget(null)}function g(t,a){R.material=t,i.setRenderTarget(a),i.render(y,C),i.setRenderTarget(null)}function x(){[o,l]=[l,o]}async function Pe(t){R.material=t;const a=await i.debug.getShaderAsync(y,C,R);console.log(a.vertexShader),console.log(a.fragmentShader)}
