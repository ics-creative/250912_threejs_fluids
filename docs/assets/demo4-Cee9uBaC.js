import{u as C,T as b,a as T,V as x,v as z,s as B,N as G,d as L,f as A,h as ee,c as te,P as ae,W as ne,S as re,O as ie,M as oe,k as se,R as F,F as ue,n as J,o as _,C as P,H as le,L as H,q as ce,r as de,t as me,w as we,x as fe,y as pe,z as ge,A as he,B as X}from"./PointerManager-BwHd8Ss5.js";/* empty css              */const ve=()=>{const t=C(new b),e=T(new x),s=z(B.xy).mul(e),i=z(s.x,s.y.oneMinus()),n=t.sample(i),a=new G;return a.vertexNode=L(),a.fragmentNode=n,A(a,{uImage:t,uTextureSize:e})},xe=()=>{const t=C(new b),e=C(new b),s=T(new x),i=T(new x),n=T(0),a=z(B.xy).mul(i),r=t.sample(a).toVar(),p=a.sub(r.xy.mul(n).mul(s).mul(3)),y=ee(p,i),Z=e.sample(y).rgb,$=te(Z,1),N=new G;return N.vertexNode=L(),N.fragmentNode=$,A(N,{uData:t,uImage:e,uTexelSize:s,uTextureSize:i,uDeltaT:n})},Se=t=>{const e=C(new b),s=T(new x),i=T(new x),n=z(B.xy).mul(s),r=(t?n:z(n.x,n.y.oneMinus())).sub(.5).mul(i).add(.5),p=e.sample(r),y=new G;return y.vertexNode=L(),y.fragmentNode=p,A(y,{uImage:e,uTextureSize:s,uImageScale:i})},d={pixelRatio:.5,solverIteration:5,forceRadius:20,forceCoefficient:1e3,dissipation:.996};let K=0;const f=new ae;let o,D,E,M,S=Math.round(window.innerWidth*window.devicePixelRatio*d.pixelRatio),g=Math.round(window.innerHeight*window.devicePixelRatio*d.pixelRatio),c=new x,u,l,h,v,m,q,O,U,k,j,I,W;await Te();Y(performance.now());async function Te(){o=new ne({antialias:!1,forceWebGL:!1}),await o.init(),o.setPixelRatio(window.devicePixelRatio),o.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(o.domElement),D=new re,E=new ie(-1,1,1,-1,0,1),M=new oe(new se(2,2)),D.add(M);const t={wrapS:P,wrapT:P,minFilter:_,magFilter:_,format:J,type:ue,depthBuffer:!1,stencilBuffer:!1};u=new F(S,g,t),l=new F(S,g,t),Q(u),Q(l);const e={wrapS:P,wrapT:P,minFilter:H,magFilter:H,format:J,type:le,depthBuffer:!1,stencilBuffer:!1};v=new F(window.innerWidth,window.innerHeight,e),m=new F(window.innerWidth,window.innerHeight,e),q=ce(),O=de(),U=me(),k=we(),j=fe(),I=xe(),W=ve(),await ze(W),h=new pe().load("texture_demo4.jpg",()=>{V()}),h.minFilter=ge,h.magFilter=H,h.colorSpace=he,window.addEventListener("resize",V),f.init(o.domElement),f.addEventListener("firstInteraction",()=>{document.querySelector("#overlay-hint").style.display="none"}),V()}function V(){o.setPixelRatio(window.devicePixelRatio),o.setSize(window.innerWidth,window.innerHeight);const t=window.innerWidth*window.devicePixelRatio,e=window.innerHeight*window.devicePixelRatio;S=Math.round(t*d.pixelRatio),g=Math.round(e*d.pixelRatio),u.setSize(S,g),l.setSize(S,g),v.setSize(t,e),m.setSize(t,e),f.resizeTarget(d.pixelRatio,o.backend.coordinateSystem===X?g:0),c.set(1/S,1/g),q.uniforms.uTexelSize.value.copy(c),O.uniforms.uTexelSize.value.copy(c),U.uniforms.uTexelSize.value.copy(c),k.uniforms.uTexelSize.value.copy(c),j.uniforms.uTexelSize.value.copy(c),I.uniforms.uTexelSize.value.copy(c),I.uniforms.uTextureSize.value.set(1/t,1/e),W.uniforms.uTextureSize.value.set(1/t,1/e),ye()}function ye(){const t=Se(o.backend.coordinateSystem===X),e=t.uniforms;e.uImage.value=h,e.uTextureSize.value.set(1/m.width,1/m.height),e.uImageScale.value.copy(Re(m.width,m.height,h.width,h.height)),w(t,v)}function Re(t,e,s,i){const n=t/e,a=s/i,r=n<=a?n/a:1,p=n<=a?1:a/n;return new x(r,p)}function Y(t){const e=(t-K)/1e3;if(f.isPointerDown){const i=q,n=i.uniforms,a=f.pointer.clone().sub(f.prevPointer).multiply(c).multiplyScalar(d.forceCoefficient);n.uData.value=u.texture,n.uForceCenter.value.copy(f.pointer.clone().multiply(c)),n.uForceDeltaV.value.copy(a),n.uForceRadius.value=d.forceRadius,w(i,l),R()}const s=Math.min(Math.max(Math.floor(e*240),1),8);for(let i=0;i<s;i++){const n=e/s;{const a=O,r=a.uniforms;r.uData.value=u.texture,r.uDeltaT.value=n,r.uDissipation.value=d.dissipation,w(a,l),R()}{const a=U,r=a.uniforms;r.uData.value=u.texture,w(a,l),R()}for(let a=0;a<d.solverIteration;a++){const r=k,p=r.uniforms;p.uData.value=u.texture,w(r,l),R()}{const a=j,r=a.uniforms;r.uData.value=u.texture,w(a,l),R()}{const a=I,r=a.uniforms;r.uImage.value=v.texture,r.uData.value=u.texture,r.uDeltaT.value=n,w(a,m),[v,m]=[m,v]}}{const i=W,n=i.uniforms;n.uImage.value=v.texture,w(i,null)}f.updatePreviousPointer(),K=t,requestAnimationFrame(Y)}function Q(t){o.setRenderTarget(t),o.clearColor(),o.setRenderTarget(null)}function w(t,e){M.material=t,o.setRenderTarget(e),o.render(D,E),o.setRenderTarget(null)}function R(){[u,l]=[l,u]}async function ze(t){M.material=t;const e=await o.debug.getShaderAsync(D,E,M);console.log(e.vertexShader),console.log(e.fragmentShader)}
