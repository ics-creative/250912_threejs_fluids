import{u as C,T as G,a as i,V as x,v as l,s as K,e as de,b as U,c as J,N as _,d as Q,f as X,m as Y,l as ze,g as De,h as be,p as Fe,i as Me,j as Pe,P as Ce,W as Ge,S as We,O as Be,M as He,k as Ie,R as B,F as Ne,n as se,o as ue,C as H,H as Ae,L as E,q as Le,r as Ve,t as ke,w as je,x as qe,y as Ee,z as Oe,A as Ue,B as Ke}from"./PointerManager-BwHd8Ss5.js";/* empty css              */const Je=()=>{const t=C(new G),a=C(new G),u=i(new x),o=i(new x),e=i(new x),n=i(new x),r=i(0),m=i(0),T=i(0),D=l(K.xy).mul(o),c=l(D.x,D.y.oneMinus()),A=Se=>{const he=l(Se).mul(n),ye=Y(n.x.div(e.x),n.y.div(e.y)),ie=l(e).mul(ye),Te=l(n).sub(ie).mul(.5),Re=l(he).sub(Te).div(ie);return a.sample(Re).rgb},L=t.sample(c).r,V=t.sample(c.sub(l(u.x,0))).r,k=t.sample(c.add(l(u.x,0))).r,j=t.sample(c.sub(l(0,u.y))).r,F=t.sample(c.add(l(0,u.y))).r,fe=l(k.sub(V).mul(.5),F.sub(j).mul(.5)),pe=c.add(fe.mul(r)),we=A(pe),re=de(m.mul(L).mul(-1)),ve=U(.8).mul(T.mul(U(1).sub(re))),xe=we.mul(re).add(ve),ge=J(xe,1),q=new _;return q.vertexNode=Q(),q.fragmentNode=ge,X(q,{uDye:t,uBackground:a,uDyeTexel:u,uScreenTexel:o,uBGSizePx:e,uScreenSizePx:n,uRefractAmp:r,uDensityK:m,uSmokeGain:T})},_e=()=>{const t=C(new G),a=C(new G),u=i(new x),o=i(new x),e=i(0),n=i(0),r=i(0),m=l(K.xy).mul(o),T=t.sample(m).toVar(),D=e.mul(ze(T.xy)),c=De(.02,.1,D),A=m.sub(T.xy.mul(n).mul(e).mul(u).mul(c)),L=be(A,o),V=a.sample(L).rgb,k=Fe(.5,e.div(Y(r,1e-6))),j=J(V.mul(k),1),F=new _;return F.vertexNode=Q(),F.fragmentNode=j,X(F,{uData:t,uImage:a,uTexelSize:u,uTextureSize:o,uDeltaT:e,uDyeAdvectScale:n,uHalfLife:r})},Qe=()=>{const t=C(new G),a=i(new x),u=i(new x),o=i(0),e=i(0),n=l(K.xy).mul(a),r=t.sample(n).rgb.toVar(),m=n.sub(u).div(Y(l(o).mul(a),l(1e-6))),T=Me(r.add(U(1).mul(e).mul(de(Pe(m,m).mul(-1)))),0,1),D=J(T,1),c=new _;return c.vertexNode=Q(),c.fragmentNode=D,X(c,{uImage:t,uTextureSize:a,uForceCenter:u,uForceRadius:o,uInjectGain:e})},w={pixelRatio:.5,solverIteration:5,forceRadius:35,forceCoefficient:500,dissipation:.995};let le=0;const f=new Ce;let s,I,Z,W,b=Math.round(window.innerWidth*window.devicePixelRatio*w.pixelRatio),z=Math.round(window.innerHeight*window.devicePixelRatio*w.pixelRatio),p=new x,M=new x,d,v,R,g,h,$,ee,te,ae,ne,oe,N,y;await Xe();me(performance.now());async function Xe(){s=new Ge({antialias:!1,forceWebGL:!1}),await s.init(),s.setPixelRatio(window.devicePixelRatio),s.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(s.domElement),I=new We,Z=new Be(-1,1,1,-1,0,1),W=new He(new Ie(2,2)),I.add(W);const t={wrapS:H,wrapT:H,minFilter:ue,magFilter:ue,format:se,type:Ne,depthBuffer:!1,stencilBuffer:!1};d=new B(b,z,t),v=new B(b,z,t),ce(d),ce(v);const a={wrapS:H,wrapT:H,minFilter:E,magFilter:E,format:se,type:Ae,depthBuffer:!1,stencilBuffer:!1};g=new B(window.innerWidth,window.innerHeight,a),h=new B(window.innerWidth,window.innerHeight,a),$=Le(),ee=Ve(),te=ke(),ae=je(),ne=qe(),oe=Qe(),N=_e(),y=Je(),await Ye(y),R=new Ee().load("texture_demo1.jpg",()=>{y.uniforms.uBGSizePx.value.set(R.width,R.height),O()}),R.minFilter=Oe,R.magFilter=E,R.colorSpace=Ue,y.uniforms.uBackground.value=R,window.addEventListener("resize",O),f.init(s.domElement),f.addEventListener("firstInteraction",()=>{document.querySelector("#overlay-hint").style.display="none"}),O()}function O(){s.setPixelRatio(window.devicePixelRatio),s.setSize(window.innerWidth,window.innerHeight);const t=window.innerWidth*window.devicePixelRatio,a=window.innerHeight*window.devicePixelRatio;b=Math.round(t*w.pixelRatio),z=Math.round(a*w.pixelRatio),d.setSize(b,z),v.setSize(b,z),g.setSize(t,a),h.setSize(t,a),f.resizeTarget(w.pixelRatio,s.backend.coordinateSystem===Ke?z:0),p.set(1/b,1/z),M.set(1/t,1/a),$.uniforms.uTexelSize.value.copy(p),ee.uniforms.uTexelSize.value.copy(p),te.uniforms.uTexelSize.value.copy(p),ae.uniforms.uTexelSize.value.copy(p),ne.uniforms.uTexelSize.value.copy(p),oe.uniforms.uTextureSize.value.copy(M),N.uniforms.uTexelSize.value.copy(p),N.uniforms.uTextureSize.value.copy(M),y.uniforms.uDyeTexel.value.copy(M),y.uniforms.uScreenTexel.value.copy(M),y.uniforms.uScreenSizePx.value.set(t,a)}function me(t){const a=(t-le)/1e3;if(f.isPointerDown){const o=$,e=o.uniforms,n=f.pointer.clone().sub(f.prevPointer).multiply(p).multiplyScalar(w.forceCoefficient);e.uData.value=d.texture,e.uForceCenter.value.copy(f.pointer.clone().multiply(p)),e.uForceDeltaV.value.copy(n),e.uForceRadius.value=w.forceRadius,S(o,v),P()}const u=Math.min(Math.max(Math.floor(a*240),1),8);for(let o=0;o<u;o++){const e=a/u;{const n=ee,r=n.uniforms;r.uData.value=d.texture,r.uDeltaT.value=e,r.uDissipation.value=w.dissipation,S(n,v),P()}{const n=te,r=n.uniforms;r.uData.value=d.texture,S(n,v),P()}for(let n=0;n<w.solverIteration;n++){const r=ae,m=r.uniforms;m.uData.value=d.texture,S(r,v),P()}{const n=ne,r=n.uniforms;r.uData.value=d.texture,S(n,v),P()}}if(f.isPointerDown){const o=oe,e=o.uniforms;e.uImage.value=g.texture,e.uForceCenter.value.copy(f.pointer.clone().multiply(p)),e.uForceRadius.value=w.forceRadius,e.uInjectGain.value=30,S(o,h),[g,h]=[h,g]}{const o=N,e=o.uniforms;e.uImage.value=g.texture,e.uData.value=d.texture,e.uDeltaT.value=a,e.uDyeAdvectScale.value=15,e.uHalfLife.value=.3,S(o,h),[g,h]=[h,g]}{const o=y,e=o.uniforms;e.uDye.value=g.texture,e.uRefractAmp.value=.9,e.uDensityK.value=.9,e.uSmokeGain.value=.8,S(o,null)}f.updatePreviousPointer(),le=t,requestAnimationFrame(me)}function ce(t){s.setRenderTarget(t),s.clearColor(),s.setRenderTarget(null)}function S(t,a){W.material=t,s.setRenderTarget(a),s.render(I,Z),s.setRenderTarget(null)}function P(){[d,v]=[v,d]}async function Ye(t){W.material=t;const a=await s.debug.getShaderAsync(I,Z,W);console.log(a.vertexShader),console.log(a.fragmentShader)}
