import{u as V,T as G,a as M,V as S,v as z,s as J,h as _,c as K,b as Q,N as X,d as Y,f as Z,P as $,W as ee,S as te,O as ae,M as ne,k as re,R as L,F as ie,n as oe,o as N,C as A,q as se,r as ue,t as le,w as ce,x as de,y as me,z as fe,L as we,A as pe,B as ve}from"./PointerManager-BwHd8Ss5.js";/* empty css              */const ge=()=>{const t=V(new G),a=V(new G),m=M(new S),f=M(new S),r=M(new S(1,1)),e=z(J.xy).mul(f),n=z(e.x,e.y.oneMinus()),p=t.sample(n).toVar(),U=n.sub(.5).mul(r).add(.5),q=z(1.2).mul(p.xy).mul(m),O=_(U.sub(q),f),k=a.sample(O).rgb,j=K(k.add(Q(p.z.mul(.01))),1),y=new X;return y.vertexNode=Y(),y.fragmentNode=j,Z(y,{uTexture:t,uImage:a,uTexelSize:m,uTextureSize:f,uImageScale:r})},c={pixelRatio:.5,solverIteration:5,forceRadius:20,forceCoefficient:1e3,dissipation:.996};let B=0;const d=new $;let i,R,F,T,g=Math.round(window.innerWidth*window.devicePixelRatio*c.pixelRatio),w=Math.round(window.innerHeight*window.devicePixelRatio*c.pixelRatio),l=new S,o,u,x,b,C,I,W,D,s;await he();E(performance.now());async function he(){i=new ee({antialias:!1,forceWebGL:!1}),await i.init(),i.setPixelRatio(window.devicePixelRatio),i.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(i.domElement),R=new te,F=new ae(-1,1,1,-1,0,1),T=new ne(new re(2,2)),R.add(T);const t={wrapS:A,wrapT:A,minFilter:N,magFilter:N,format:oe,type:ie,depthBuffer:!1,stencilBuffer:!1};o=new L(g,w,t),u=new L(g,w,t),H(o),H(u),b=se(),C=ue(),I=le(),W=ce(),D=de(),s=ge(),await Se(s),x=new me().load("texture_demo3.jpg",()=>{P()}),x.minFilter=fe,x.magFilter=we,x.colorSpace=pe,window.addEventListener("resize",P),d.init(i.domElement),d.addEventListener("firstInteraction",()=>{document.querySelector("#overlay-hint").style.display="none"}),P()}function P(){i.setPixelRatio(window.devicePixelRatio),i.setSize(window.innerWidth,window.innerHeight);const t=window.innerWidth*window.devicePixelRatio,a=window.innerHeight*window.devicePixelRatio;g=Math.round(t*c.pixelRatio),w=Math.round(a*c.pixelRatio),o.setSize(g,w),u.setSize(g,w),d.resizeTarget(c.pixelRatio,i.backend.coordinateSystem===ve?w:0),l.set(1/g,1/w),b.uniforms.uTexelSize.value.copy(l),C.uniforms.uTexelSize.value.copy(l),I.uniforms.uTexelSize.value.copy(l),W.uniforms.uTexelSize.value.copy(l),D.uniforms.uTexelSize.value.copy(l),s.uniforms.uTexelSize.value.copy(l),s.uniforms.uTextureSize.value.set(1/t,1/a),s.uniforms.uImage.value.source?.data&&s.uniforms.uImageScale.value.copy(xe(t,a,s.uniforms.uImage.value.width,s.uniforms.uImage.value.height))}function xe(t,a,m,f){const r=t/a,e=m/f,n=r<=e?r/e:1,p=r<=e?1:e/r;return new S(n,p)}function E(t){const a=(t-B)/1e3;if(d.isPointerDown){const r=b,e=r.uniforms,n=d.pointer.clone().sub(d.prevPointer).multiply(l).multiplyScalar(c.forceCoefficient);e.uData.value=o.texture,e.uForceCenter.value.copy(d.pointer.clone().multiply(l)),e.uForceDeltaV.value.copy(n),e.uForceRadius.value=c.forceRadius,v(r,u),h()}const m=Math.min(Math.max(Math.floor(a*240),1),8),f=a/m;for(let r=0;r<m;r++){{const e=C,n=e.uniforms;n.uData.value=o.texture,n.uDeltaT.value=f,n.uDissipation.value=c.dissipation,v(e,u),h()}{const e=I,n=e.uniforms;n.uData.value=o.texture,v(e,u),h()}for(let e=0;e<c.solverIteration;e++){const n=W,p=n.uniforms;p.uData.value=o.texture,v(n,u),h()}{const e=D,n=e.uniforms;n.uData.value=o.texture,v(e,u),h()}}{const r=s,e=r.uniforms;e.uTexture.value=o.texture,s.uniforms.uImage.value=x,v(r,null)}d.updatePreviousPointer(),B=t,requestAnimationFrame(E)}function H(t){i.setRenderTarget(t),i.clearColor(),i.setRenderTarget(null)}function v(t,a){T.material=t,i.setRenderTarget(a),i.render(R,F),i.setRenderTarget(null)}function h(){[o,u]=[u,o]}async function Se(t){T.material=t;const a=await i.debug.getShaderAsync(R,F,T);console.log(a.vertexShader),console.log(a.fragmentShader)}
