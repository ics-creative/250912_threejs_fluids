import{u as G,T as q,a as z,V as T,v as P,s as Z,r as $,d as E,t as ee,w as ae,N as te,e as ne,g as re,W as ie,S as oe,O as se,M as ue,P as le,R as L,F as ce,h as de,i as N,C as B,j as me,k as fe,m as we,n as pe,o as ge,x as he,L as ve,y as xe,z as Se,p as Te,q as Re}from"./PointerManager-ZLIzfdCe.js";const ye=()=>{const a=G(new q),t=G(new q),d=z(new T),w=z(new T),r=z(new T(1,1)),e=P(Z.xy).mul(w),n=P(e.x,e.y.oneMinus()),p=a.sample(n).toVar(),v=n.sub(.5).mul(r).add(.5),O=v.x.greaterThanEqual(0).and(v.x.lessThanEqual(1)),j=v.y.greaterThanEqual(0).and(v.y.lessThanEqual(1)),k=O.and(j),J=P(1.2).mul(p.xy).mul(d),X=$(v.sub(J),d),Y=t.sample(X).rgb,_=E(Y.add(ee(p.z.mul(.01))),1),K=E(0,0,0,1),Q=ae(k,_,K),M=new te;return M.vertexNode=ne(),M.fragmentNode=Q,re(M,{uTexture:a,uImage:t,uTexelSize:d,uTextureSize:w,uImageScale:r})},c={pixelRatio:.5,solverIteration:5,forceRadius:20,forceCoefficient:1e3,dissipation:.996};let H=0;const m=new Te;let i,y,C,R,h=Math.round(window.innerWidth*window.devicePixelRatio*c.pixelRatio),f=Math.round(window.innerHeight*window.devicePixelRatio*c.pixelRatio),l=new T,o,u,S,b,I,W,D,V,s;await Me();U(performance.now());async function Me(){i=new ie({antialias:!1,forceWebGL:!1}),await i.init(),i.setPixelRatio(window.devicePixelRatio),i.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(i.domElement),y=new oe,C=new se(-1,1,1,-1,0,1),R=new ue(new le(2,2)),y.add(R);const a={wrapS:B,wrapT:B,minFilter:N,magFilter:N,format:de,type:ce,depthBuffer:!1,stencilBuffer:!1};o=new L(h,f,a),u=new L(h,f,a),A(o),A(u),b=me(),I=fe(),W=we(),D=pe(),V=ge(),s=ye(),await Pe(s),S=new he().load("texture_demo2.jpg",()=>{F()}),S.minFilter=ve,S.magFilter=xe,S.colorSpace=Se,window.addEventListener("resize",F),m.init(),F()}function F(){i.setPixelRatio(window.devicePixelRatio),i.setSize(window.innerWidth,window.innerHeight);const a=window.innerWidth*window.devicePixelRatio,t=window.innerHeight*window.devicePixelRatio;h=Math.round(a*c.pixelRatio),f=Math.round(t*c.pixelRatio),o.setSize(h,f),u.setSize(h,f),m.resizeTarget(c.pixelRatio,i.backend.coordinateSystem===Re?f:0),l.set(1/h,1/f),b.uniforms.uTexelSize.value.copy(l),I.uniforms.uTexelSize.value.copy(l),W.uniforms.uTexelSize.value.copy(l),D.uniforms.uTexelSize.value.copy(l),V.uniforms.uTexelSize.value.copy(l),s.uniforms.uTexelSize.value.copy(l),s.uniforms.uTextureSize.value.set(1/a,1/t),s.uniforms.uImage.value.source?.data&&s.uniforms.uImageScale.value.copy(ze(a,t,s.uniforms.uImage.value.width,s.uniforms.uImage.value.height))}function ze(a,t,d,w){const r=a/t,e=d/w,n=r>=e?r/e:1,p=r>=e?1:e/r;return new T(n,p)}function U(a){const t=(a-H)/1e3;if(m.isPointerDown){const r=b,e=r.uniforms,n=m.pointer.clone().sub(m.prevPointer).multiply(l).multiplyScalar(c.forceCoefficient);e.uData.value=o.texture,e.uForceCenter.value.copy(m.pointer.clone().multiply(l)),e.uForceDeltaV.value.copy(n),e.uForceRadius.value=c.forceRadius,g(r,u),x()}const d=Math.min(Math.max(Math.floor(t*240),1),8),w=t/d;for(let r=0;r<d;r++){{const e=I,n=e.uniforms;n.uData.value=o.texture,n.uDeltaT.value=w,n.uDissipation.value=c.dissipation,g(e,u),x()}{const e=W,n=e.uniforms;n.uData.value=o.texture,g(e,u),x()}for(let e=0;e<c.solverIteration;e++){const n=D,p=n.uniforms;p.uData.value=o.texture,g(n,u),x()}{const e=V,n=e.uniforms;n.uData.value=o.texture,g(e,u),x()}}{const r=s,e=r.uniforms;e.uTexture.value=o.texture,s.uniforms.uImage.value=S,g(r,null)}m.updatePreviousPointer(),H=a,requestAnimationFrame(U)}function A(a){i.setRenderTarget(a),i.clearColor(),i.setRenderTarget(null)}function g(a,t){R.material=a,i.setRenderTarget(t),i.render(y,C),i.setRenderTarget(null)}function x(){[o,u]=[u,o]}async function Pe(a){R.material=a;const t=await i.debug.getShaderAsync(y,C,R);console.log(t.vertexShader),console.log(t.fragmentShader)}
